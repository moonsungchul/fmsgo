// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

package fmsgo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cmd struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Cmd                  string   `protobuf:"bytes,2,opt,name=cmd,proto3" json:"cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cmd) Reset()         { *m = Cmd{} }
func (m *Cmd) String() string { return proto.CompactTextString(m) }
func (*Cmd) ProtoMessage()    {}
func (*Cmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{0}
}

func (m *Cmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cmd.Unmarshal(m, b)
}
func (m *Cmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cmd.Marshal(b, m, deterministic)
}
func (m *Cmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cmd.Merge(m, src)
}
func (m *Cmd) XXX_Size() int {
	return xxx_messageInfo_Cmd.Size(m)
}
func (m *Cmd) XXX_DiscardUnknown() {
	xxx_messageInfo_Cmd.DiscardUnknown(m)
}

var xxx_messageInfo_Cmd proto.InternalMessageInfo

func (m *Cmd) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Cmd) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

type CmdReply struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Cmd                  string   `protobuf:"bytes,2,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Result               string   `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CmdReply) Reset()         { *m = CmdReply{} }
func (m *CmdReply) String() string { return proto.CompactTextString(m) }
func (*CmdReply) ProtoMessage()    {}
func (*CmdReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{1}
}

func (m *CmdReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmdReply.Unmarshal(m, b)
}
func (m *CmdReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmdReply.Marshal(b, m, deterministic)
}
func (m *CmdReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmdReply.Merge(m, src)
}
func (m *CmdReply) XXX_Size() int {
	return xxx_messageInfo_CmdReply.Size(m)
}
func (m *CmdReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CmdReply.DiscardUnknown(m)
}

var xxx_messageInfo_CmdReply proto.InternalMessageInfo

func (m *CmdReply) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *CmdReply) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *CmdReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type HeartbeatMsg struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatMsg) Reset()         { *m = HeartbeatMsg{} }
func (m *HeartbeatMsg) String() string { return proto.CompactTextString(m) }
func (*HeartbeatMsg) ProtoMessage()    {}
func (*HeartbeatMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{2}
}

func (m *HeartbeatMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatMsg.Unmarshal(m, b)
}
func (m *HeartbeatMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatMsg.Marshal(b, m, deterministic)
}
func (m *HeartbeatMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatMsg.Merge(m, src)
}
func (m *HeartbeatMsg) XXX_Size() int {
	return xxx_messageInfo_HeartbeatMsg.Size(m)
}
func (m *HeartbeatMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatMsg.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatMsg proto.InternalMessageInfo

func (m *HeartbeatMsg) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type HeartbeatReply struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatReply) Reset()         { *m = HeartbeatReply{} }
func (m *HeartbeatReply) String() string { return proto.CompactTextString(m) }
func (*HeartbeatReply) ProtoMessage()    {}
func (*HeartbeatReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{3}
}

func (m *HeartbeatReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatReply.Unmarshal(m, b)
}
func (m *HeartbeatReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatReply.Marshal(b, m, deterministic)
}
func (m *HeartbeatReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatReply.Merge(m, src)
}
func (m *HeartbeatReply) XXX_Size() int {
	return xxx_messageInfo_HeartbeatReply.Size(m)
}
func (m *HeartbeatReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatReply.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatReply proto.InternalMessageInfo

func (m *HeartbeatReply) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

type NodeInfo struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	HostName             string   `protobuf:"bytes,2,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()    {}
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{4}
}

func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
}
func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
}
func (m *NodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfo.Merge(m, src)
}
func (m *NodeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeInfo.Size(m)
}
func (m *NodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfo proto.InternalMessageInfo

func (m *NodeInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *NodeInfo) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

type RetMsg struct {
	MsgNo                int32    `protobuf:"varint,1,opt,name=msg_no,json=msgNo,proto3" json:"msg_no,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetMsg) Reset()         { *m = RetMsg{} }
func (m *RetMsg) String() string { return proto.CompactTextString(m) }
func (*RetMsg) ProtoMessage()    {}
func (*RetMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{5}
}

func (m *RetMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetMsg.Unmarshal(m, b)
}
func (m *RetMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetMsg.Marshal(b, m, deterministic)
}
func (m *RetMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetMsg.Merge(m, src)
}
func (m *RetMsg) XXX_Size() int {
	return xxx_messageInfo_RetMsg.Size(m)
}
func (m *RetMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_RetMsg.DiscardUnknown(m)
}

var xxx_messageInfo_RetMsg proto.InternalMessageInfo

func (m *RetMsg) GetMsgNo() int32 {
	if m != nil {
		return m.MsgNo
	}
	return 0
}

func (m *RetMsg) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type MemoryInfo struct {
	Total                uint64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Free                 uint64   `protobuf:"varint,2,opt,name=free,proto3" json:"free,omitempty"`
	UsePercent           float64  `protobuf:"fixed64,3,opt,name=use_percent,json=usePercent,proto3" json:"use_percent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemoryInfo) Reset()         { *m = MemoryInfo{} }
func (m *MemoryInfo) String() string { return proto.CompactTextString(m) }
func (*MemoryInfo) ProtoMessage()    {}
func (*MemoryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{6}
}

func (m *MemoryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemoryInfo.Unmarshal(m, b)
}
func (m *MemoryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemoryInfo.Marshal(b, m, deterministic)
}
func (m *MemoryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemoryInfo.Merge(m, src)
}
func (m *MemoryInfo) XXX_Size() int {
	return xxx_messageInfo_MemoryInfo.Size(m)
}
func (m *MemoryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MemoryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MemoryInfo proto.InternalMessageInfo

func (m *MemoryInfo) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *MemoryInfo) GetFree() uint64 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *MemoryInfo) GetUsePercent() float64 {
	if m != nil {
		return m.UsePercent
	}
	return 0
}

type CPUInfo struct {
	LogicCPU             int32     `protobuf:"varint,1,opt,name=LogicCPU,json=logicCPU,proto3" json:"LogicCPU,omitempty"`
	PhysicsCPU           int32     `protobuf:"varint,2,opt,name=PhysicsCPU,json=physicsCPU,proto3" json:"PhysicsCPU,omitempty"`
	PercentCPU           []float64 `protobuf:"fixed64,3,rep,packed,name=PercentCPU,json=percentCPU,proto3" json:"PercentCPU,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CPUInfo) Reset()         { *m = CPUInfo{} }
func (m *CPUInfo) String() string { return proto.CompactTextString(m) }
func (*CPUInfo) ProtoMessage()    {}
func (*CPUInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{7}
}

func (m *CPUInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPUInfo.Unmarshal(m, b)
}
func (m *CPUInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPUInfo.Marshal(b, m, deterministic)
}
func (m *CPUInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPUInfo.Merge(m, src)
}
func (m *CPUInfo) XXX_Size() int {
	return xxx_messageInfo_CPUInfo.Size(m)
}
func (m *CPUInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CPUInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CPUInfo proto.InternalMessageInfo

func (m *CPUInfo) GetLogicCPU() int32 {
	if m != nil {
		return m.LogicCPU
	}
	return 0
}

func (m *CPUInfo) GetPhysicsCPU() int32 {
	if m != nil {
		return m.PhysicsCPU
	}
	return 0
}

func (m *CPUInfo) GetPercentCPU() []float64 {
	if m != nil {
		return m.PercentCPU
	}
	return nil
}

type DiskInfo struct {
	Total                uint64   `protobuf:"varint,1,opt,name=Total,json=total,proto3" json:"Total,omitempty"`
	Free                 uint64   `protobuf:"varint,2,opt,name=Free,json=free,proto3" json:"Free,omitempty"`
	Used                 uint64   `protobuf:"varint,3,opt,name=Used,json=used,proto3" json:"Used,omitempty"`
	Percent              uint64   `protobuf:"varint,4,opt,name=Percent,json=percent,proto3" json:"Percent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskInfo) Reset()         { *m = DiskInfo{} }
func (m *DiskInfo) String() string { return proto.CompactTextString(m) }
func (*DiskInfo) ProtoMessage()    {}
func (*DiskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{8}
}

func (m *DiskInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskInfo.Unmarshal(m, b)
}
func (m *DiskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskInfo.Marshal(b, m, deterministic)
}
func (m *DiskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskInfo.Merge(m, src)
}
func (m *DiskInfo) XXX_Size() int {
	return xxx_messageInfo_DiskInfo.Size(m)
}
func (m *DiskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DiskInfo proto.InternalMessageInfo

func (m *DiskInfo) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *DiskInfo) GetFree() uint64 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *DiskInfo) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *DiskInfo) GetPercent() uint64 {
	if m != nil {
		return m.Percent
	}
	return 0
}

func init() {
	proto.RegisterType((*Cmd)(nil), "fmsgo.Cmd")
	proto.RegisterType((*CmdReply)(nil), "fmsgo.CmdReply")
	proto.RegisterType((*HeartbeatMsg)(nil), "fmsgo.HeartbeatMsg")
	proto.RegisterType((*HeartbeatReply)(nil), "fmsgo.HeartbeatReply")
	proto.RegisterType((*NodeInfo)(nil), "fmsgo.NodeInfo")
	proto.RegisterType((*RetMsg)(nil), "fmsgo.RetMsg")
	proto.RegisterType((*MemoryInfo)(nil), "fmsgo.MemoryInfo")
	proto.RegisterType((*CPUInfo)(nil), "fmsgo.CPUInfo")
	proto.RegisterType((*DiskInfo)(nil), "fmsgo.DiskInfo")
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor_bedfbfc9b54e5600) }

var fileDescriptor_bedfbfc9b54e5600 = []byte{
	// 439 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0xc7, 0xd7, 0x26, 0x6d, 0xb3, 0x1b, 0x1d, 0x93, 0x61, 0x28, 0x2a, 0xd2, 0x98, 0xfc, 0xc2,
	0x9e, 0x8a, 0x80, 0x07, 0x9e, 0x78, 0x21, 0xd3, 0x04, 0x12, 0xab, 0x22, 0x43, 0xc5, 0x63, 0x95,
	0x26, 0x57, 0x2f, 0x22, 0x8e, 0x2d, 0xdb, 0x45, 0xea, 0x47, 0xe2, 0x5b, 0x22, 0x3b, 0x4e, 0x40,
	0x05, 0x89, 0xb7, 0xbb, 0xdf, 0x9d, 0xef, 0xff, 0x4f, 0xee, 0x00, 0xb8, 0x56, 0xe5, 0x52, 0x69,
	0x69, 0x25, 0x99, 0xec, 0x84, 0xe1, 0x92, 0xbe, 0x84, 0x28, 0x13, 0x15, 0x39, 0x87, 0x71, 0xad,
	0xd2, 0xd1, 0xf5, 0xe8, 0xe6, 0x94, 0x8d, 0x6b, 0x45, 0x2e, 0x20, 0x2a, 0x45, 0x95, 0x8e, 0x3d,
	0x70, 0x21, 0xbd, 0x85, 0x24, 0x13, 0x15, 0x43, 0xd5, 0x1c, 0xfe, 0xdf, 0x4d, 0x9e, 0xc1, 0x54,
	0xa3, 0xd9, 0x37, 0x36, 0x8d, 0x3c, 0x0c, 0x19, 0xbd, 0x82, 0x47, 0x1f, 0xb1, 0xd0, 0x76, 0x8b,
	0x85, 0xbd, 0x37, 0xfc, 0x78, 0x12, 0xa5, 0x70, 0x3e, 0xd4, 0x3b, 0xad, 0x0b, 0x88, 0x34, 0xda,
	0xd0, 0xe2, 0x42, 0xfa, 0x0e, 0x92, 0x95, 0xac, 0xf0, 0x53, 0xbb, 0x93, 0x7f, 0x39, 0x79, 0x0e,
	0xa7, 0x0f, 0xd2, 0xd8, 0x4d, 0x5b, 0x08, 0x0c, 0x7e, 0x12, 0x07, 0x56, 0x85, 0x40, 0xfa, 0x1a,
	0xa6, 0x0c, 0xbd, 0xec, 0x25, 0x4c, 0x85, 0xe1, 0x9b, 0x56, 0xfa, 0xa7, 0x13, 0x36, 0x11, 0x86,
	0xaf, 0xa4, 0xd3, 0x12, 0x86, 0xf7, 0xdf, 0x21, 0x0c, 0xa7, 0xdf, 0x00, 0xee, 0x51, 0x48, 0x7d,
	0xf0, 0x6a, 0x4f, 0x61, 0x62, 0xa5, 0x2d, 0x1a, 0xff, 0x2a, 0x66, 0x5d, 0x42, 0x08, 0xc4, 0x3b,
	0x8d, 0x9d, 0x5c, 0xcc, 0x7c, 0x4c, 0x5e, 0xc0, 0xd9, 0xde, 0xe0, 0x46, 0xa1, 0x2e, 0xb1, 0xed,
	0x7e, 0xc2, 0x88, 0xc1, 0xde, 0x60, 0xde, 0x11, 0x8a, 0x30, 0xcb, 0xf2, 0xb5, 0x9f, 0xba, 0x80,
	0xe4, 0xb3, 0xe4, 0x75, 0x99, 0xe5, 0xeb, 0x60, 0x27, 0x69, 0x42, 0x4e, 0xae, 0x00, 0xf2, 0x87,
	0x83, 0xa9, 0x4b, 0xe3, 0xaa, 0x63, 0x5f, 0x05, 0x35, 0x10, 0x5f, 0xef, 0x26, 0xba, 0x7a, 0x74,
	0x1d, 0x39, 0x19, 0x35, 0x10, 0xba, 0x85, 0xe4, 0xb6, 0x36, 0xdf, 0x7b, 0xf7, 0x5f, 0xff, 0xe9,
	0xfe, 0xee, 0xd8, 0x3d, 0x81, 0x78, 0x6d, 0xb0, 0xf2, 0xb6, 0x63, 0x16, 0xef, 0x0d, 0x56, 0x24,
	0x85, 0x59, 0x50, 0x4a, 0x63, 0x8f, 0x67, 0x41, 0xe6, 0xcd, 0xcf, 0x11, 0xcc, 0xef, 0x84, 0x61,
	0xaa, 0xfc, 0x82, 0xfa, 0x47, 0x5d, 0x22, 0x79, 0x0f, 0xf3, 0xbc, 0x6e, 0xb9, 0xdf, 0xe4, 0x07,
	0x2c, 0x2c, 0x79, 0xb2, 0xf4, 0xd7, 0xb6, 0xfc, 0x73, 0xf7, 0x8b, 0xcb, 0x63, 0xe8, 0x17, 0x4e,
	0x4f, 0xc8, 0x0d, 0xcc, 0xb2, 0xa2, 0x69, 0xdc, 0x5d, 0x42, 0xe8, 0xc9, 0x44, 0xb5, 0x78, 0xfc,
	0x3b, 0xee, 0x3b, 0x5f, 0xc1, 0x19, 0x43, 0x3e, 0x5c, 0x43, 0xdf, 0xd1, 0x83, 0xc5, 0x3c, 0x80,
	0x6e, 0xed, 0xf4, 0x64, 0x3b, 0xf5, 0xc7, 0xff, 0xf6, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x12,
	0x74, 0x94, 0x1e, 0x0a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FmsRpcServiceClient is the client API for FmsRpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FmsRpcServiceClient interface {
	PingHeartBeat(ctx context.Context, in *HeartbeatMsg, opts ...grpc.CallOption) (*HeartbeatReply, error)
	CallCmd(ctx context.Context, in *Cmd, opts ...grpc.CallOption) (*CmdReply, error)
	RegNodeInfo(ctx context.Context, in *NodeInfo, opts ...grpc.CallOption) (*RetMsg, error)
}

type fmsRpcServiceClient struct {
	cc *grpc.ClientConn
}

func NewFmsRpcServiceClient(cc *grpc.ClientConn) FmsRpcServiceClient {
	return &fmsRpcServiceClient{cc}
}

func (c *fmsRpcServiceClient) PingHeartBeat(ctx context.Context, in *HeartbeatMsg, opts ...grpc.CallOption) (*HeartbeatReply, error) {
	out := new(HeartbeatReply)
	err := c.cc.Invoke(ctx, "/fmsgo.FmsRpcService/PingHeartBeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fmsRpcServiceClient) CallCmd(ctx context.Context, in *Cmd, opts ...grpc.CallOption) (*CmdReply, error) {
	out := new(CmdReply)
	err := c.cc.Invoke(ctx, "/fmsgo.FmsRpcService/CallCmd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fmsRpcServiceClient) RegNodeInfo(ctx context.Context, in *NodeInfo, opts ...grpc.CallOption) (*RetMsg, error) {
	out := new(RetMsg)
	err := c.cc.Invoke(ctx, "/fmsgo.FmsRpcService/RegNodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FmsRpcServiceServer is the server API for FmsRpcService service.
type FmsRpcServiceServer interface {
	PingHeartBeat(context.Context, *HeartbeatMsg) (*HeartbeatReply, error)
	CallCmd(context.Context, *Cmd) (*CmdReply, error)
	RegNodeInfo(context.Context, *NodeInfo) (*RetMsg, error)
}

// UnimplementedFmsRpcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFmsRpcServiceServer struct {
}

func (*UnimplementedFmsRpcServiceServer) PingHeartBeat(ctx context.Context, req *HeartbeatMsg) (*HeartbeatReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PingHeartBeat not implemented")
}
func (*UnimplementedFmsRpcServiceServer) CallCmd(ctx context.Context, req *Cmd) (*CmdReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CallCmd not implemented")
}
func (*UnimplementedFmsRpcServiceServer) RegNodeInfo(ctx context.Context, req *NodeInfo) (*RetMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegNodeInfo not implemented")
}

func RegisterFmsRpcServiceServer(s *grpc.Server, srv FmsRpcServiceServer) {
	s.RegisterService(&_FmsRpcService_serviceDesc, srv)
}

func _FmsRpcService_PingHeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FmsRpcServiceServer).PingHeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fmsgo.FmsRpcService/PingHeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FmsRpcServiceServer).PingHeartBeat(ctx, req.(*HeartbeatMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _FmsRpcService_CallCmd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Cmd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FmsRpcServiceServer).CallCmd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fmsgo.FmsRpcService/CallCmd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FmsRpcServiceServer).CallCmd(ctx, req.(*Cmd))
	}
	return interceptor(ctx, in, info, handler)
}

func _FmsRpcService_RegNodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FmsRpcServiceServer).RegNodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fmsgo.FmsRpcService/RegNodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FmsRpcServiceServer).RegNodeInfo(ctx, req.(*NodeInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _FmsRpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fmsgo.FmsRpcService",
	HandlerType: (*FmsRpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PingHeartBeat",
			Handler:    _FmsRpcService_PingHeartBeat_Handler,
		},
		{
			MethodName: "CallCmd",
			Handler:    _FmsRpcService_CallCmd_Handler,
		},
		{
			MethodName: "RegNodeInfo",
			Handler:    _FmsRpcService_RegNodeInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc.proto",
}
