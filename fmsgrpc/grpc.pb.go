// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

package fmsgo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HeartbeatMsg struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatMsg) Reset()         { *m = HeartbeatMsg{} }
func (m *HeartbeatMsg) String() string { return proto.CompactTextString(m) }
func (*HeartbeatMsg) ProtoMessage()    {}
func (*HeartbeatMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{0}
}

func (m *HeartbeatMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatMsg.Unmarshal(m, b)
}
func (m *HeartbeatMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatMsg.Marshal(b, m, deterministic)
}
func (m *HeartbeatMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatMsg.Merge(m, src)
}
func (m *HeartbeatMsg) XXX_Size() int {
	return xxx_messageInfo_HeartbeatMsg.Size(m)
}
func (m *HeartbeatMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatMsg.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatMsg proto.InternalMessageInfo

func (m *HeartbeatMsg) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type HeartbeatReply struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatReply) Reset()         { *m = HeartbeatReply{} }
func (m *HeartbeatReply) String() string { return proto.CompactTextString(m) }
func (*HeartbeatReply) ProtoMessage()    {}
func (*HeartbeatReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{1}
}

func (m *HeartbeatReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatReply.Unmarshal(m, b)
}
func (m *HeartbeatReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatReply.Marshal(b, m, deterministic)
}
func (m *HeartbeatReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatReply.Merge(m, src)
}
func (m *HeartbeatReply) XXX_Size() int {
	return xxx_messageInfo_HeartbeatReply.Size(m)
}
func (m *HeartbeatReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatReply.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatReply proto.InternalMessageInfo

func (m *HeartbeatReply) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

func init() {
	proto.RegisterType((*HeartbeatMsg)(nil), "fmsgo.HeartbeatMsg")
	proto.RegisterType((*HeartbeatReply)(nil), "fmsgo.HeartbeatReply")
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor_bedfbfc9b54e5600) }

var fileDescriptor_bedfbfc9b54e5600 = []byte{
	// 137 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x2f, 0x2a, 0x48,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4d, 0xcb, 0x2d, 0x4e, 0xcf, 0x57, 0x92, 0xe3,
	0xe2, 0xf1, 0x48, 0x4d, 0x2c, 0x2a, 0x49, 0x4a, 0x4d, 0x2c, 0xf1, 0x2d, 0x4e, 0x17, 0xe2, 0xe3,
	0x62, 0xca, 0x2c, 0x90, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xca, 0x2c, 0x50, 0x52, 0xe2,
	0xe2, 0x83, 0xcb, 0x07, 0xa5, 0x16, 0xe4, 0x54, 0x0a, 0x09, 0x70, 0x31, 0x17, 0xa5, 0x96, 0x40,
	0x95, 0x80, 0x98, 0x46, 0x5e, 0x5c, 0x9c, 0x60, 0x35, 0x4e, 0xa9, 0x89, 0x25, 0x42, 0xb6, 0x5c,
	0xbc, 0x01, 0x99, 0x79, 0xe9, 0x08, 0x01, 0x61, 0x3d, 0xb0, 0x4d, 0x7a, 0xc8, 0xd6, 0x48, 0x89,
	0xa2, 0x0b, 0x82, 0xcd, 0x56, 0x62, 0x48, 0x62, 0x03, 0xbb, 0xce, 0x18, 0x10, 0x00, 0x00, 0xff,
	0xff, 0xf2, 0xc7, 0x6b, 0x17, 0xab, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HeartBeatClient is the client API for HeartBeat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HeartBeatClient interface {
	PingHeartBeat(ctx context.Context, in *HeartbeatMsg, opts ...grpc.CallOption) (*HeartbeatReply, error)
}

type heartBeatClient struct {
	cc *grpc.ClientConn
}

func NewHeartBeatClient(cc *grpc.ClientConn) HeartBeatClient {
	return &heartBeatClient{cc}
}

func (c *heartBeatClient) PingHeartBeat(ctx context.Context, in *HeartbeatMsg, opts ...grpc.CallOption) (*HeartbeatReply, error) {
	out := new(HeartbeatReply)
	err := c.cc.Invoke(ctx, "/fmsgo.HeartBeat/PingHeartBeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HeartBeatServer is the server API for HeartBeat service.
type HeartBeatServer interface {
	PingHeartBeat(context.Context, *HeartbeatMsg) (*HeartbeatReply, error)
}

// UnimplementedHeartBeatServer can be embedded to have forward compatible implementations.
type UnimplementedHeartBeatServer struct {
}

func (*UnimplementedHeartBeatServer) PingHeartBeat(ctx context.Context, req *HeartbeatMsg) (*HeartbeatReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PingHeartBeat not implemented")
}

func RegisterHeartBeatServer(s *grpc.Server, srv HeartBeatServer) {
	s.RegisterService(&_HeartBeat_serviceDesc, srv)
}

func _HeartBeat_PingHeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeartBeatServer).PingHeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fmsgo.HeartBeat/PingHeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeartBeatServer).PingHeartBeat(ctx, req.(*HeartbeatMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _HeartBeat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fmsgo.HeartBeat",
	HandlerType: (*HeartBeatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PingHeartBeat",
			Handler:    _HeartBeat_PingHeartBeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc.proto",
}
